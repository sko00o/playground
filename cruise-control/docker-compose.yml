services:
  cruise-control:
    build:
      dockerfile: Dockerfile
      context: cruise-control-docker
    restart: on-failure
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "18090:8090"
    volumes:
      - "./config/cruise-control:/opt/cruise-control/config:ro"
    depends_on:
      kafka:
        condition: service_healthy

  # provide jar file for kafka
  cruise-control-metrics:
    build:
      dockerfile: Dockerfile
      context: cruise-control-docker
    restart: on-failure
    volumes:
      - cruise-control-metrics:/opt/cruise-control/cruise-control/build/dependant-libs
    entrypoint: sh
    command: |
      -c "trap 'exit 0' TERM INT; exec tail -f /dev/null"

  kafka:
    image: wurstmeister/kafka:2.12-2.5.1
    restart: unless-stopped
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      CLASSPATH: /metrics/*
      KAFKA_METRIC_REPORTERS: com.linkedin.kafka.cruisecontrol.metricsreporter.CruiseControlMetricsReporter
      KAFKA_CRUISE_CONTROL_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CRUISE_CONTROL_METRICS_TOPIC_AUTO_CREATE: "true"
      KAFKA_CRUISE_CONTROL_METRICS_TOPIC_NUM_PARTITIONS: 1
      KAFKA_CRUISE_CONTROL_METRICS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - cruise-control-metrics:/metrics:ro
      - ./config/kafka/topiccheck.sh:/topiccheck.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "/topiccheck.sh __CruiseControlMetrics"]
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      zookeeper:
        condition: service_healthy
      cruise-control-metrics:
        condition: service_started

  zookeeper:
    image: zookeeper:3.7.1
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "echo stat / | zkCli.sh -server 127.0.0.1:2181"]
      interval: 5s
      timeout: 10s
      retries: 10

volumes:
  cruise-control-metrics:
